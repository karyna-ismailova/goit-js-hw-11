{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\n\n\nconst API_KEY = '49130705-dcf2ba3ffc1780735e7549732';\nconst BASE_URL = 'https://pixabay.com/api/';\nexport async function fetchImages(query) {\n    try {\n        const response = await axios.get(BASE_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n            },\n        });\n        return response.data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        return [];\n    }\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n\n\nconst lightbox = new SimpleLightbox('.gallery a');\nconst loadingMsg = document.querySelector('.loader');\n\nexport function renderGallery(images) {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = images.map(image => `\n        <li class = \"list\">\n        <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\">\n            <ul class=\"info\">\n                <li>Likes<br>${image.likes}</li>\n                <li>Views<br>${image.views}</li>\n                <li>Comments<br>${image.comments}</li>\n                <li>Downloads<br>${image.downloads}</li>\n            </ul>\n        </a></li>\n    `).join('');\n    lightbox.refresh();\n}\n\nexport function showErrorMessage() {\n    iziToast.error({\n        title: 'Error',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n    });\n}\n\nexport function showLoader() {\n    if (loadingMsg) {\n        \n        loadingMsg.style.display = 'block';\n    }\n}\n\nexport function hideLoader() {\n    if (loadingMsg) {\n        loadingMsg.style.display = 'none';\n    }\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery, showErrorMessage, showLoader, hideLoader} from './js/render-function.js';\n\n\n\ndocument.querySelector('.search-form').addEventListener('submit', async (event) => {\n    event.preventDefault();\n    const query = event.target.elements.searchQuery.value.trim();\n    \n    if (!query) {\n        showErrorMessage();\n        return;\n    }\n    showLoader(\n        \n    );\n    \n    \n    \n    const images = await fetchImages(query);\n     hideLoader();\n    if (images.length > 0) {\n        renderGallery(images);\n    } else {\n        showErrorMessage();\n    }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","lightbox","SimpleLightbox","loadingMsg","renderGallery","images","gallery","image","showErrorMessage","iziToast","showLoader","hideLoader","event"],"mappings":"owBAIA,MAAMA,EAAU,qCACVC,EAAW,2BACV,eAAeC,EAAYC,EAAO,CACrC,GAAI,CAUA,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACvC,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACb,CAAS,GACe,KAAK,IACxB,OAAQE,EAAO,CACZ,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACV,CACL,CCfA,MAAMC,EAAW,IAAIC,EAAe,YAAY,EAC1CC,EAAa,SAAS,cAAc,SAAS,EAE5C,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EAAO,IAAIE,GAAS;AAAA;AAAA,mBAEzBA,EAAM,aAAa;AAAA,wBACdA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,+BAE/BA,EAAM,KAAK;AAAA,+BACXA,EAAM,KAAK;AAAA,kCACRA,EAAM,QAAQ;AAAA,mCACbA,EAAM,SAAS;AAAA;AAAA;AAAA,KAG7C,EAAE,KAAK,EAAE,EACVN,EAAS,QAAO,CACpB,CAEO,SAASO,GAAmB,CAC/BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,0EACjB,CAAK,CACL,CAEO,SAASC,GAAa,CACrBP,IAEAA,EAAW,MAAM,QAAU,QAEnC,CAEO,SAASQ,GAAa,CACrBR,IACAA,EAAW,MAAM,QAAU,OAEnC,CCxCA,SAAS,cAAc,cAAc,EAAE,iBAAiB,SAAU,MAAOS,GAAU,CAC/EA,EAAM,eAAc,EACpB,MAAMd,EAAQc,EAAM,OAAO,SAAS,YAAY,MAAM,OAEtD,GAAI,CAACd,EAAO,CACRU,IACA,MACH,CACDE,EAEJ,EAII,MAAML,EAAS,MAAMR,EAAYC,CAAK,EACrCa,IACGN,EAAO,OAAS,EAChBD,EAAcC,CAAM,EAEpBG,GAER,CAAC"}